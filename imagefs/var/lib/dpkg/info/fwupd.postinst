#!/bin/sh
set -e

# Automatically added by dh_installsystemd/12.10ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'fwupd-refresh.timer' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'fwupd-refresh.timer'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'fwupd-refresh.timer' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'fwupd-refresh.timer' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/12.10ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'fwupd-offline-update.service' 'fwupd-refresh.service' 'fwupd-refresh.timer' 'fwupd.service' >/dev/null || true
	fi
fi
# End automatically added section


if dpkg-maintscript-helper supports rm_conffile 2>/dev/null; then
	dpkg-maintscript-helper rm_conffile \
		/etc/fwupd.conf 1.0.0~ -- "$@"
	dpkg-maintscript-helper rm_conffile \
		/etc/fwupd/remotes.d/fwupd.conf 1.2.7~ -- "$@"
        dpkg-maintscript-helper rm_conffile \
                /etc/dbus-1/system.d/org.freedesktop.fwupd.conf 1.3.2~ -- "$@"
fi

# Clean up from fwupdate->fwupd transition
# This can be removed after bullseye and focal are released
EFIDIR=$(dpkg-vendor --query vendor | awk '{ print tolower($$0) }')
if [ "${DPKG_MAINTSCRIPT_ARCH}" = "amd64" ]; then
	EFI_NAME=x64
elif [ "${DPKG_MAINTSCRIPT_ARCH}" = "i386" ]; then
	EFI_NAME=ia32
elif [ "${DPKG_MAINTSCRIPT_ARCH}" = "arm64" ]; then
	EFI_NAME=aa64
elif [ "${DPKG_MAINTSCRIPT_ARCH}" = "armhf" ]; then
	EFI_NAME=arm
fi
rm -f /boot/efi/EFI/$EFIDIR/fwup$EFI_NAME.efi
rm -f /var/lib/fwupdate/done
rm -f /var/cache/fwupdate/done
for dir in /var/cache/fwupdate /var/lib/fwupdate; do
	if [ -d $dir ]; then
	        rmdir --ignore-fail-on-non-empty $dir || true
	fi
done
